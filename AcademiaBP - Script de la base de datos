DROP DATABASE IF EXISTS academiabp_db;

CREATE DATABASE academiabp_db;

USE academiabp_db;

------------------------------------------------------------
-- niveles de usuario
CREATE TABLE tb_niveles_administradores(
id_nivel INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
nivel  VARCHAR(100) NOT NULL
);

INSERT INTO tb_niveles_administradores (nivel) VALUES('Administrador'), ('Trabajador');

ALTER TABLE tb_niveles_administradores ADD CONSTRAINT u_nivel UNIQUE (nivel);


------------------------------------------------------------
-- administradores
CREATE TABLE tb_administradores(
    id_administrador INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    nombre_admistrador  VARCHAR(50) NOT NULL,
    apellido_administrador VARCHAR(50) NOT NULL,
    dui_administrador VARCHAR(10) NOT NULL,
    correo_administrador VARCHAR(100) NOT NULL,
    telefono_administrador VARCHAR(9) NOT NULL,
    alias_administrador VARCHAR(100) NOT NULL,
    clave_administrador VARCHAR(100) NOT NULL,
    fecha_registro DATE NOT NULL DEFAULT NOW(),
    foto_administrador VARCHAR(200) NULL,
    id_nivel INT NOT NULL,
    estado_adminstrador ENUM('Activo', 'Inactivo') NOT NULL
);

-- restricciones de administradores
ALTER TABLE tb_administradores ADD CONSTRAINT fk_nivel_admin 
FOREIGN KEY(id_nivel) REFERENCES tb_niveles_administradores(id_nivel) 
ON UPDATE CASCADE 
ON DELETE CASCADE;

-- restricciones de administradores
ALTER TABLE tb_administradores ADD CONSTRAINT u_dui_admin UNIQUE(dui_administrador);
ALTER TABLE tb_administradores ADD CONSTRAINT u_correo_admin UNIQUE(correo_administrador);
ALTER TABLE tb_administradores ADD CONSTRAINT u_telefono_admin UNIQUE(telefono_administrador);
ALTER TABLE tb_administradores ADD CONSTRAINT u_alias_admin UNIQUE(alias_administrador);
-----------------------------------------------------------------------------------------------------------------------------

INSERT INTO tb_administradores (nombre_admistrador, apellido_administrador, dui_administrador, correo_administrador, telefono_administrador, alias_administrador, clave_administrador, id_nivel, fecha_registro, estado_adminstrador) VALUES

('María', 'González', '98765432-1', 'maria@example.com', '98765432', 'mary', 'clave456', 2, NOW(), 'Activo'),
('Luis', 'Martínez', '45678901-2', 'luis@example.com', '45678901', 'luisito', 'clave789', 1, NOW(), 'Activo'),
('Ana', 'Rodríguez', '21098765-3', 'ana@example.com', '21098765', 'anita', 'claveabc', 2, NOW(), 'Activo'),
('Carlos', 'López', '67890123-4', 'carlos@example.com', '67890123', 'carlitos', 'clavedef', 2, NOW(), 'Activo'),
('Laura', 'Hernández', '34567890-5', 'laura@example.com', '34567890', 'laurita', 'claveghi', 1, NOW(), 'Activo'),
('Pedro', 'Díaz', '78901234-6', 'pedro@example.com', '78901234', 'pedrito', 'clavejkl', 2, NOW(), 'Activo'),
('Sofía', 'Sánchez', '54321098-7', 'sofia@example.com', '54321098', 'sofi', 'clavemno', 1, NOW(), 'Activo'),
('Pablo', 'Gómez', '89012345-8', 'pablo@example.com', '89012345', 'pablito', 'clavepqr', 1, NOW(), 'Activo'),
('Elena', 'Fernández', '23456789-0', 'elena@example.com', '23456789', 'elenita', 'clavestu', 2, NOW(), 'Activo');

------------------------------------------------------------
-- categorias de productos
CREATE TABLE tb_categorias_productos(
id_categoria_producto INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
categoria_producto VARCHAR(50) NOT NULL,
imagen_categoria VARCHAR(100) NOT NULL
);

ALTER TABLE tb_categorias_productos ADD CONSTRAINT U_categoriaaa UNIQUE(categoria_producto);

------------------------------------------------------------
CREATE TABLE tb_tallas(
id_talla INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
talla VARCHAR(20) NOT NULL
);
ALTER TABLE tb_tallas ADD CONSTRAINT U_talla UNIQUE(talla);

------------------------------------------------------------
CREATE TABLE tb_colores(
id_color INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
color VARCHAR(40) NOT NULL
);
ALTER TABLE tb_colores ADD CONSTRAINT U_color UNIQUE(color);

------------------------------------------------------------
-- productos
CREATE TABLE tb_productos(
id_producto INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
id_administrador INT NOT NULL,
id_categoria_producto INT NOT NULL,
nombre_producto VARCHAR(50) NOT NULL,
descripcion_producto VARCHAR(250) NOT NULL,
precio_producto NUMERIC(8,2) NOT NULL,
imagen_producto VARCHAR(100) NOT NULL,
estado_producto ENUM("En venta", "No disponible") NOT NULL,
fecha_registro DATE NOT NULL default NOW(),
descuento_producto DECIMAL(4,2) NULL
);

ALTER TABLE tb_productos ADD CONSTRAINT fk_admin_productos 
FOREIGN KEY(id_administrador) REFERENCES tb_administradores(id_administrador) 
ON UPDATE CASCADE 
ON DELETE CASCADE;

ALTER TABLE tb_productos ADD CONSTRAINT fk_cat_productos 
FOREIGN KEY (id_categoria_producto) REFERENCES tb_categorias_productos(id_categoria_producto) 
ON UPDATE CASCADE 
ON DELETE CASCADE;

-- restricciones de productos
ALTER TABLE tb_productos ADD CONSTRAINT ch_precio CHECK(precio_producto > 0);
ALTER TABLE tb_productos ADD CONSTRAINT ch_descuento CHECK(descuento_producto < 100 && descuento_producto >= 0);
ALTER TABLE tb_productos ADD CONSTRAINT u_producto UNIQUE(nombre_producto);

------------------------------------------------------------
CREATE TABLE tb_detalleProducto(
id_detalle_producto INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
id_producto INT NOT NULL,
id_talla INT NOT NULL,
id_color INT NOT NULL,
existencias_producto INT NOT NULL
);


ALTER TABLE tb_detalleProducto ADD CONSTRAINT fk_productos_detalless
FOREIGN KEY (id_producto) REFERENCES tb_productos(id_producto) 
ON UPDATE CASCADE 
ON DELETE CASCADE;
ALTER TABLE tb_detalleProducto ADD CONSTRAINT fk_tallas_detalles 
FOREIGN KEY (id_talla) REFERENCES tb_tallas(id_talla) 
ON UPDATE CASCADE 
ON DELETE CASCADE;
ALTER TABLE tb_detalleProducto ADD CONSTRAINT fk_colores_detalles
FOREIGN KEY (id_color) REFERENCES tb_colores(id_color) 
ON UPDATE CASCADE 
ON DELETE CASCADE;

ALTER TABLE tb_detalleProducto ADD CONSTRAINT ch_existencias CHECK(existencias_producto >= 0);
ALTER TABLE tb_detalleProducto
ADD CONSTRAINT unique_producto_talla_color UNIQUE (id_producto, id_talla, id_color);


--------------------------------


-- tabla para los valores de la Academia
CREATE TABLE tb_valores(
id_valor INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
nombre_valor VARCHAR(100) NOT NULL,
descripcion_valor VARCHAR(400) NOT NULL,
imagen_valor VARCHAR(100) NOT NULL
);

alter table tb_valores add constraint U_nombre UNIQUE(nombre_valor);

------------------------------------------------------------
-- tabla para los aliados que tenga la Academia
CREATE TABLE tb_aliados(
id_aliado INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
nombre_aliado VARCHAR(100) NOT NULL,
imagen_aliado VARCHAR(100) NOT NULL
);

alter table tb_aliados add constraint U_aliado UNIQUE(nombre_aliado);

------------------------------------------------------------
-- staff, o personal, de la academia
CREATE TABLE tb_staffs(
id_staff INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
nombre_staff VARCHAR(100) NOT NULL,
apellido_staff VARCHAR(100) NOT NULL,
imagen_staff VARCHAR(200) NOT NULL,
descripcion_extra VARCHAR(500) NOT NULL
);

INSERT INTO tb_staffs (nombre_staff, apellido_staff, descripcion_extra, imagen_staff) VALUES
('Pablo', 'Leguizamo', 'Entrenador certificado con más de 10 años de experiencia en fútbol.', 'imagen.png'),
('Napoleon', 'Baires', 'Preparadora física especializada en entrenamiento de resistencia y fuerza.', 'imagen.png'),
('Andy', 'Alas', 'Nutricionista deportivo con experiencia en planificación de dietas para atletas.', 'imagen.png'),
('Carlos', 'Aparicio', 'Psicóloga deportiva con enfoque en el rendimiento y motivación de los deportistas.', 'imagen.png'),
('Justino', 'Amaya', 'Fisioterapeuta especializado en rehabilitación de lesiones deportivas.', 'imagen.png'),
('Wilmer', 'Melara', 'Entrenadora de yoga certificada con enfoque en mejorar la flexibilidad y el equilibrio.', 'imagen.png'),
('Diego', 'Aguero', 'Entrenador de natación con experiencia en enseñanza de técnicas de respiración y estilo.', 'imagen.png'),
('Nelson', 'Torres', 'Coach de vida y bienestar, experta en mindfulness y técnicas de manejo del estrés.', 'imagen.png'),
('Lucas', 'Rivera', 'Especialista en acondicionamiento físico y entrenamiento de fuerza para deportistas.', 'imagen.png'),
('Eduardo', 'Quintanilla', 'Entrenadora personal con enfoque en pérdida de peso y mejora de la salud general.', 'imagen.png');


------------------------------------------------------------
CREATE TABLE tb_niveles_entrenamientos(
id_nivel_entrenamiento INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
nivel_entrenamiento VARCHAR(100) NOT NULL,
descripcion_nivel VARCHAR(500) NOT NULL,
imagen_nivel VARCHAR(100) NOT NULL
);

ALTER TABLE tb_niveles_entrenamientos ADD CONSTRAINT U_nivelentrenamiento UNIQUE(nivel_entrenamiento);

------------------------------------------------------------
CREATE TABLE tb_horarios_entrenamientos(
id_horario INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
dia_entrenamiento ENUM('Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo') NOT NULL,
hora_inicio TIME NOT NULL,
hor_fin TIME NOT NULL
);

ALTER TABLE tb_horarios_entrenamientos ADD CONSTRAINT ch_horarios CHECK (hora_inicio < hor_fin);

------------------------------------------------------------
CREATE TABLE tb_lugares_entrenamientos(
id_lugar INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
nombre_lugar VARCHAR(200) NOT NULL,
imagen_lugar VARCHAR(100) NOT NULL,
direccion_lugar VARCHAR(200) NOT NULL,
URL_lugar varchar(300) NOT NULL
);

ALTER TABLE tb_lugares_entrenamientos ADD CONSTRAINT U_lugarentrenamiento UNIQUE(nombre_lugar);
ALTER TABLE tb_lugares_entrenamientos ADD CONSTRAINT U_URLentrenamiento UNIQUE(URL_lugar);

CREATE TABLE tb_horarios_lugares (
    id_horario_lugar INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    id_horario INT NOT NULL,
    id_lugar INT NOT NULL,
    FOREIGN KEY (id_horario) REFERENCES tb_horarios_entrenamientos(id_horario) 
        ON UPDATE CASCADE 
        ON DELETE CASCADE,
    FOREIGN KEY (id_lugar) REFERENCES tb_lugares_entrenamientos(id_lugar) 
        ON UPDATE CASCADE 
        ON DELETE CASCADE
);

------------------------------------------------------------


CREATE TABLE tb_dias_pagos(
id_dia_pago INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
numero_dias INT NOT NULL,
mensualidad_pagar DECIMAL(8, 2) NOT NULL
);

ALTER TABLE tb_dias_pagos ADD CONSTRAINT ch_mensualidad CHECK(mensualidad_pagar >= 0);
ALTER TABLE tb_dias_pagos ADD CONSTRAINT ch_dias CHECK(numero_dias > 0);



------------------------------------------------------------
-- categorias de alumnos
CREATE TABLE tb_categorias_alumnos(
id_categoria_alumno INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
categoria VARCHAR(30) NOT NULL,
edad_maxima INT NOT NULL, -- Edad máxima para estar en una categoría
id_nivel_entrenamiento INT NOT NULL,
imagen_categoria VARCHAR(100) NOT NULL
);
ALTER TABLE tb_categorias_alumnos ADD edad_minima INT NOT NULL;


ALTER TABLE tb_categorias_alumnos ADD CONSTRAINT ch_eddad CHECK(edad_maxima > 0);
ALTER TABLE tb_categorias_alumnos ADD CONSTRAINT ch_eddadd CHECK(edad_minima > 0 AND edad_minima < edad_maxima);
ALTER TABLE tb_categorias_alumnos ADD CONSTRAINT U_cate UNIQUE(categoria);

ALTER TABLE tb_categorias_alumnos ADD CONSTRAINT fk_nivel_entrenamiento_categoria 
FOREIGN KEY (id_nivel_entrenamiento) REFERENCES tb_niveles_entrenamientos(id_nivel_entrenamiento) 
ON UPDATE CASCADE 
ON DELETE CASCADE;



------------------------------------------------------------

CREATE TABLE tb_categorias_horarios(
    id_categoria_horario INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_categoria_alumno INT NOT NULL,
    id_horario_lugar INT NOT NULL
);

ALTER TABLE tb_categorias_horarios ADD CONSTRAINT fk_categoria_alumnooos 
FOREIGN KEY (id_categoria_alumno) REFERENCES tb_categorias_alumnos(id_categoria_alumno) 
ON UPDATE CASCADE 
ON DELETE CASCADE;

ALTER TABLE tb_categorias_horarios ADD CONSTRAINT fk_categoria_horariooo 
FOREIGN KEY (id_horario_lugar) REFERENCES tb_horarios_lugares(id_horario_lugar) 
ON UPDATE CASCADE 
ON DELETE CASCADE;

------------------------------------------------------------


CREATE TABLE tb_staffs_categorias(
    id_staff_categorias INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_staff INT NOT NULL,
    id_categoria_horario INT NOT NULL
);


-- restricciones de staff y categorías de alumnos
ALTER TABLE tb_staffs_categorias ADD CONSTRAINT fk_staff 
FOREIGN KEY (id_staff) REFERENCES tb_staffs(id_staff) 
ON UPDATE CASCADE 
ON DELETE CASCADE;

ALTER TABLE tb_staffs_categorias ADD CONSTRAINT fk_categoria_alumno 
FOREIGN KEY (id_categoria_horario) REFERENCES tb_categorias_horarios(id_categoria_horario) 
ON UPDATE CASCADE 
ON DELETE CASCADE;



------------------------------------------------------------
-- clientes de la tienda en linea
CREATE TABLE tb_clientes(
id_cliente INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
nombre_cliente VARCHAR(50) NOT NULL,
apellido_cliente VARCHAR(50) NOT NULL,
dui_cliente VARCHAR(10) NOT NULL,
correo_cliente VARCHAR(100) NOT NULL,
telefono_cliente varchar(9) NOT NULL,
direccion_cliente VARCHAR(250) NOT NULL,
clave_cliente VARCHAR(100) NOT NULL,
estado_cliente ENUM("Activo", "Inactivo") NOT NULL DEFAULT("Activo"),
fecha_registro DATE NOT NULL default NOW(),
foto_cliente VARCHAR(200) NULL
);



-- restricciones de clientes
ALTER TABLE tb_clientes ADD CONSTRAINT u_dui_cliente UNIQUE(dui_cliente);
ALTER TABLE tb_clientes ADD CONSTRAINT u_correo_cliente UNIQUE(correo_cliente);
ALTER TABLE tb_clientes ADD CONSTRAINT u_telefono_cliente UNIQUE(telefono_cliente);


INSERT INTO tb_clientes (nombre_cliente, apellido_cliente, dui_cliente, correo_cliente, telefono_cliente, direccion_cliente, clave_cliente, estado_cliente, fecha_registro, foto_cliente) VALUES
('María', 'López', '12345678-9', 'maria@example.com', '78901234', 'Calle Principal #123', 'clave123', 'Activo', NOW(), 'maria_foto.jpg'),
('Juan', 'Martínez', '98765432-1', 'juan@example.com', '45678901', 'Avenida Central #456', 'clave456', 'Activo', NOW(), 'juan_foto.jpg'),
('Luis', 'González', '23456789-0', 'luis@example.com', '12345678', 'Calle Secundaria #789', 'clave789', 'Activo', NOW(), 'luis_foto.jpg'),
('Ana', 'Rodríguez', '34567890-1', 'ana@example.com', '23456789', 'Calle Principal #234', 'claveabc', 'Activo', NOW(), 'ana_foto.jpg'),
('Carlos', 'Hernández', '45678901-2', 'carlos@example.com', '34567890', 'Avenida Central #567', 'clavedef', 'Activo', NOW(), 'carlos_foto.jpg'),
('Laura', 'Pérez', '56789012-3', 'laura@example.com', '45178901', 'Calle Secundaria #890', 'claveghi', 'Activo', NOW(), 'laura_foto.jpg'),
('Pedro', 'Sánchez', '67890123-4', 'pedro@example.com', '56789012', 'Avenida Principal #1234', 'clavejkl', 'Activo', NOW(), 'pedro_foto.jpg'),
('Sofía', 'Gómez', '78901234-5', 'sofia@example.com', '67890123', 'Calle Principal #5678', 'clavemno', 'Activo', NOW(), 'sofia_foto.jpg'),
('Pablo', 'Díaz', '89012345-6', 'pablo@example.com', '78909234', 'Avenida Central #9012', 'clavepqr', 'Activo', NOW(), 'pablo_foto.jpg'),
('Elena', 'Fernández', '90123456-7', 'elena@example.com', '89012345', 'Calle Secundaria #3456', 'clavestu', 'Activo', NOW(), 'elena_foto.jpg'),
('Diego', 'González', '01234567-8', 'diego@example.com', '90123456', 'Avenida Principal #7890', 'clavevwx', 'Activo', NOW(), 'diego_foto.jpg'),
('Lucía', 'Martín', '09876543-2', 'lucia@example.com', '01234567', 'Calle Principal #8901', 'claveyz', 'Activo', NOW(), 'lucia_foto.jpg');

------------------------------------------------------------------------------------------

-- alumnos
CREATE TABLE tb_alumnos(
id_alumno INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
nombre_alumno VARCHAR(100) NOT NULL,
apellido_alumno VARCHAR(100) NOT NULL,
fecha_nacimiento DATE NOT NULL,
posicion_alumno ENUM('Portero', 'Jugador de campo') NOT NULL,
id_staff_categorias INT,
id_dia_pago INT NOT NULL,
id_cliente INT NOT NULL,
estado_alumno ENUM('Activo', 'Inactivo', 'Pendiente') NOT NULL DEFAULT('Pendiente')
-- id_dia_entreno INT NOT NULL
);
ALTER TABLE tb_alumnos ADD foto_alumno VARCHAR(200) NULL DEFAULT 'alumno.png';
ALTER TABLE tb_alumnos ADD fecha_inscripcion DATE NOT NULL DEFAULT NOW();



ALTER TABLE tb_alumnos ADD CONSTRAINT fk_alumno_categoria FOREIGN KEY(id_staff_categorias) REFERENCES tb_staffs_categorias(id_staff_categorias)
ON DELETE CASCADE
ON UPDATE CASCADE;
ALTER TABLE tb_alumnos ADD CONSTRAINT fk_alumnodiaspago FOREIGN KEY(id_dia_pago) REFERENCES tb_dias_pagos(id_dia_pago)
ON DELETE CASCADE
ON UPDATE CASCADE;
ALTER TABLE tb_alumnos ADD CONSTRAINT fk_alumnocliente FOREIGN KEY(id_cliente) REFERENCES tb_clientes(id_cliente)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE tb_alumnos
ADD CONSTRAINT check_fecha_nacimiento CHECK (fecha_nacimiento <= CURDATE());


------------------------------------------------------------------------------------------
-- CREATE TABLE tb_alumnos_categorias(
-- id_alumno_categoria INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
-- id_alumno INT NOT NULL,
-- id_staff_categorias INT NOT NULL
-- );
------------------------------------------------------------------------------------------

-- compras que se realicen
CREATE TABLE tb_compras(
id_compra INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
id_cliente INT NOT NULL,
estado_compra ENUM("Entregada", "Anulada", "Finalizada", "Pendiente") NOT NULL,
fecha_registro DATE NOT NULL DEFAULT NOW(),
direccion_compra VARCHAR(250) NOT NULL
);


ALTER TABLE tb_compras ADD CONSTRAINT fk_pedido_cliente FOREIGN KEY(id_cliente) REFERENCES tb_clientes(id_cliente)
ON DELETE CASCADE
ON UPDATE CASCADE;

------------------------------------------------------------------------------------------

-- detalles de cada compra
CREATE TABLE tb_detalles_compras(
id_detalle_compra INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
id_compra INT NOT NULL,
id_detalle_producto INT NOT NULL,
cantidad_producto INT NOT NULL,
precio_producto DECIMAL(10, 2)
);


-- restricciones de detalles compras
ALTER TABLE tb_detalles_compras ADD CONSTRAINT fk_orden_detalle FOREIGN KEY(id_compra) REFERENCES tb_compras(id_compra)
ON DELETE CASCADE
ON UPDATE CASCADE;
ALTER TABLE tb_detalles_compras ADD CONSTRAINT fk_orden_productos FOREIGN KEY (id_detalle_producto) REFERENCES tb_detalleProducto(id_detalle_producto)
ON DELETE CASCADE
ON UPDATE CASCADE;
ALTER TABLE tb_detalles_compras ADD CONSTRAINT ch_cantidadP CHECK(cantidad_producto > 0);

ALTER TABLE tb_detalles_compras ADD CONSTRAINT ch_precio CHECK(precio_producto > 0);

select * from tb_compras;
select * from tb_productos;
-------------------------------------

INSERT INTO tb_detalles_compras (id_compra, id_detalle_producto, cantidad_producto) VALUES
(10, 2, 1),
(11, 2, 2),
(12, 4, 3),
(13, 1, 1);


SELECT * FROM tb_detalles_compras;

------------------------------------------------------------------------------------------

        
-- valoracion de los productos comprados
CREATE TABLE tb_valoraciones(
id_valoracion INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
id_detalle_compra INT NOT NULL,
calificacion_producto INT NULL,
comentario_producto varchar(250) NULL,
fecha_valoracion DATE NOT NULL DEFAULT NOW(),
estado_comentario ENUM("Habilitado", "Deshabilitado") NOT NULL
);
        

ALTER TABLE tb_valoraciones ADD CONSTRAINT fk_orden_valoracion FOREIGN KEY (id_detalle_compra) REFERENCES tb_detalles_compras(id_detalle_compra)
ON DELETE CASCADE
ON UPDATE CASCADE;
ALTER TABLE tb_valoraciones ADD CONSTRAINT ch_valoracion CHECK(calificacion_producto < 6); -- la mayor calificación será 5


INSERT INTO tb_valoraciones (id_detalle_compra, calificacion_producto, comentario_producto, fecha_valoracion, estado_comentario) VALUES
(1, 5, 'Muy satisfecho con la compra.', NOW(), 'Habilitado'),
(2, 5, 'Muy satisfecho con la compra.', NOW(), 'Habilitado'),
(3, 3, 'Regular, podría mejorar.', NOW(), 'Deshabilitado'),
(4, 5, 'Producto de calidad.', NOW(), 'Habilitado');

------------------------------------------------------------------------------------------

-- pagos de mensualidad
CREATE TABLE tb_pagos (
    id_pago INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    fecha_pago DATE NOT NULL DEFAULT NOW(),
    cuotas_anuales INT, -- se enviará con un procedimiento almacenado
    cuotas_pendientes INT DEFAULT cuotas_anuales, -- por defecto, igual a cuotas_anuales
    id_alumno INT NOT NULL, -- hará referencia al alumno al que se le realizará el pago, con la referencia del encargado
    estado_pago ENUM('Pagado', 'Pendiente de pago') NOT NULL DEFAULT('Pagado')
);



ALTER TABLE tb_pagos ADD CONSTRAINT Fk_cliente_pago FOREIGN KEY (id_alumno) REFERENCES tb_alumnos(id_alumno)
ON DELETE CASCADE
ON UPDATE CASCADE;
ALTER TABLE tb_pagos ADD CONSTRAINT ch_cuotasAn CHECK(cuotas_anuales >= 0);
ALTER TABLE tb_pagos ADD CONSTRAINT ch_cuotasAnn CHECK(cuotas_anuales < 13);
ALTER TABLE tb_pagos ADD CONSTRAINT cuotasPe CHECK(cuotas_pendientes >= 0);

------------------------------------------------------------------------------------------

-- detalles de cada pago
CREATE TABLE tb_detalles_pagos(
id_detalle_pago INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
id_pago INT NOT NULL,
descripcion_pago VARCHAR(200) NOT NULL DEFAULT('Pago de mensualidad'),
fecha_proximo_pago DATE NOT NULL
);

ALTER TABLE tb_detalles_pagos ADD CONSTRAINT Fk_detalle_pago FOREIGN KEY (id_pago) REFERENCES tb_pagos(id_pago)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE tb_detalles_pagos ADD estado_proximo_pago ENUM('Pendiente de pago', 'Pagado') NOT NULL DEFAULT ('Pendiente de pago');

------------------------------------------------------------------------------------------

-- soporte tecnico
CREATE TABLE tb_soporte_tecnico(
id_soporte INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
mensaje VARCHAR(2000) NOT NULL,
fecha_envio DATE NOT NULL DEFAULT NOW(),
estado_mensaje ENUM('Pendiente', 'Visto', 'Atendido') NOT NULL,
id_cliente INT NOT NULL
);

ALTER TABLE tb_soporte_tecnico ADD CONSTRAINT Fk_cliente_soporte FOREIGN KEY (id_cliente) REFERENCES tb_clientes(id_cliente);

INSERT INTO tb_soporte_tecnico (mensaje, estado_mensaje, id_cliente, fecha_envio) VALUES
('El sistema no responde, necesito ayuda.', 'Pendiente', 11, NOW()),
('No puedo acceder a mi cuenta, ¿qué debo hacer?', 'Visto', 2, NOW()),
('Problemas para procesar el pago, favor de revisar.', 'Atendido', 3, NOW()),
('Necesito asistencia técnica para configurar mi equipo nuevo.', 'Pendiente', 4, NOW()),
('No se pueden cargar imágenes en el sitio web.', 'Pendiente', 5, NOW()),
('La página de inicio muestra un error 404.', 'Atendido', 6, NOW()),
('¿Cómo puedo recuperar mi contraseña?', 'Visto', 7, NOW()),
('Requiero información sobre el plan de servicios.', 'Pendiente', 8, NOW()),
('No puedo descargar el archivo adjunto del correo electrónico.', 'Pendiente', 9, NOW()),
('El chat en vivo no está funcionando correctamente.', 'Visto', 10, NOW());

---------------------------------------------------------------------------------

show tables;

select * from tb_administradores;
select * from tb_alumnos;
select * from tb_categorias_alumnos;
select * from tb_categorias_productos;
select * from tb_staffs_categorias;
select * from tb_clientes;
select * from tb_detalles_compras;
select * from tb_detalles_pagos;
select * from tb_niveles_administradores;
select * from tb_compras;
select * from tb_pagos;
select * from tb_productos;
select * from tb_soporte_tecnico;
select * from tb_staffs;
select * from tb_valoraciones;
select * from tb_lugares_entrenamientos;
select * from tb_horarios_entrenamientos;
